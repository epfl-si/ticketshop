// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  uniqueId  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  travels  Travel[]
  settings Setting[]

  @@index([uniqueId])
  @@map("users")
}

model Fund {
  id         String @id @default(uuid()) @db.Uuid
  resourceId String @unique
  cf         String @default("")

  settings Setting[]

  @@index([resourceId])
  @@map("funds")
}

model Travel {
  id          String  @id @default(uuid()) @db.Uuid
  requestId   String  @unique
  name        String
  dates       String?
  destination String?
  userId      String  @db.Uuid

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  settings Setting[]

  @@index([userId])
  @@index([requestId])
  @@map("travels")
}

model Setting {
  id       String  @id @default(uuid()) @db.Uuid
  shown    Boolean @default(true)
  userId   String  @db.Uuid
  travelId String? @db.Uuid
  fundId   String? @db.Uuid

  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  travel Travel? @relation(fields: [travelId], references: [id], onDelete: Cascade)
  fund   Fund?   @relation(fields: [fundId], references: [id], onDelete: Cascade)

  @@unique([userId, travelId])
  @@unique([userId, fundId])
  @@index([userId])
  @@map("settings")
}
